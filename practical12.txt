Index.html file
<html>
<head>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <h2>Login Form</h2>
    <form action="/login" method="POST">
        <div>
            <label for="username">Username:</label>
            <input type="text" id="username" name="username" required>
        </div>
        <div>
            <label for="password">Password:</label>
            <input type="password" id="password" name="password" required>
        </div>
        <button type="submit">Login</button>
    </form>
</body>
</html>




Style.css code
body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    background-color: #f4f4f4;
    justify-content: center;
    align-items: center;
    height: 100vh;
}

h2 {
    color: #333;
    text-align: center;
    margin-top: 30px;
    
}

form {
    background-color: white;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
}
input {
    padding: 10px;
    margin: 10px 0;
    width: 100%;
    box-sizing: border-box;
}
button {
    padding: 10px 20px;
    background-color: #5cb85c;
    border: none;
    color: white;
    cursor: pointer;
    width: 100%;
}
button:hover {
    background-color: #4cae4c;
}





App.js code
const express = require('express');
const session = require('express-session');

// Initialize Express app
const app = express();

// Set up the port
const port = 3000;

// Middleware to handle form data
app.use(express.urlencoded({ extended: true }));
app.use(express.json());

// Set up session handling
app.use(session({
  secret: 'yourSecretKey',
  resave: false,
  saveUninitialized: true
}));

// Sample users (replace with a database in a real application)
const users = {
  admin: { username: 'admin', password: 'admin123' },
  user: { username: 'user', password: 'user123' }
};

// Serve static files (like CSS)
app.use(express.static('public'));

// Home route
app.get('/', (req, res) => {
  if (req.session.user) {
    return res.redirect('/dashboard');
  }
  res.sendFile(__dirname + '/views/index.html');
});

// Login route
app.post('/login', (req, res) => {
  const { username, password } = req.body;
  
  // Check if the username exists
  if (users[username] && users[username].password === password) {
    req.session.user = users[username]; // Store user in session
    return res.redirect('/dashboard');
  } else {
    return res.send('Invalid credentials. Please try again.');
  }
});

// Dashboard route (after successful login)
app.get('/dashboard', (req, res) => {
  if (!req.session.user) {
    return res.redirect('/');
  }
  res.send(`<h1>Welcome ${req.session.user.username}</h1><a href="/logout">Logout</a>`);
});

// Logout route
app.get('/logout', (req, res) => {
  req.session.destroy((err) => {
    if (err) {
      return res.redirect('/dashboard');
    }
    res.redirect('/');
  });
});

// Start the server
app.listen(port, () => {
  console.log(`Server is running on http://localhost:${port}`);
});
